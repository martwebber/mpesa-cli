name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.24)'
        required: true
        type: string
      release_notes:
        description: 'Custom release notes (optional - will auto-generate if empty)'
        required: false
        type: string

permissions:
  contents: write
  packages: write

jobs:
  validate-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Validate version format
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version format: $VERSION"
            echo "✅ Expected format: v1.2.3"
            exit 1
          fi
          
          # Check if tag already exists
          if git tag -l | grep -q "^${VERSION}$"; then
            echo "❌ Tag $VERSION already exists"
            exit 1
          fi
          
          echo "✅ Version $VERSION is valid and available"
          
      - name: Run comprehensive tests
        uses: ./.github/workflows/test.yml
        
      - name: Generate release notes if not provided
        id: release-notes
        run: |
          CUSTOM_NOTES="${{ github.event.inputs.release_notes }}"
          
          if [ -n "$CUSTOM_NOTES" ]; then
            echo "Using custom release notes"
            echo "notes=$CUSTOM_NOTES" >> $GITHUB_OUTPUT
          else
            echo "Auto-generating release notes"
            
            # Get latest tag for comparison
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            
            # Generate notes from commits
            NOTES="## Changes in ${{ github.event.inputs.version }}

            $(git log ${LATEST_TAG}..HEAD --pretty=format:"- %s (%h)" | head -20)
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${LATEST_TAG}...${{ github.event.inputs.version }}"
            
            echo "notes<<EOF" >> $GITHUB_OUTPUT
            echo "$NOTES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
          
      - name: Create and push tag
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"
          
          echo "✅ Created and pushed tag: $VERSION"
          echo "🚀 Release workflow will start automatically"
          
      - name: Create GitHub release
        uses: actions/github-script@v7
        with:
          script: |
            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ github.event.inputs.version }}',
              name: '${{ github.event.inputs.version }}',
              body: `${{ steps.release-notes.outputs.notes }}`,
              draft: false,
              prerelease: false
            });
            
            console.log(`✅ Created release: ${release.html_url}`);